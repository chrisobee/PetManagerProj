@model PetManager.ViewModels.TasksAndPetsVM

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    
}
<style>
    table{
        border-collapse:separate;
        border-spacing:25px 0;
    }
    td{
        padding: 10px 0
    }
    .col-md-5{
        height:500px;
    }
    .col-md-2{
        height:500px;
    }
    
</style>
<h1>Welcome @Model.PetOwner.FirstName!</h1>
<hr />
<div class="row">
    <div style="border-style: double;
        border-color: grey;
        border-width: thick;
        text-align: center;" class="col-md-2">
        <table>
            <thead>
                <tr>Contacts:</tr>
            </thead>
            @foreach (PetOwner contact in Model.Contacts)
            {
                <tr>
                    <td><a asp-action="IndexForContact" asp-route-contactId="@contact.PetOwnerId">@contact.FirstName  @contact.LastName</a></td>
                </tr>
            }
        </table>
    </div>
    <div style="border-style: double; border-color:grey; border-width:thick; padding-bottom:10px" class="col-md-5">
        <table>
            <thead>
                <tr>
                    <th>Pet Name</th>
                    <th>Animal Type</th>
                    <th>Recommended Tasks</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Pet pet in Model.CurrentUsersPets)
                {
                    <tr>
                        <td><a asp-controller="Pets" asp-action="Details" asp-route-id="@pet.PetId">@pet.Name</a></td>
                        <td>@pet.AnimalType.Name</td>
                        <td>
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-info">Recommended Tasks</button>
                                <div class="btn-group" role="group">
                                    <button id="btnGroupDrop3" type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop3" style="">
                                        @foreach (Recommendation recommendation in pet.Recommendations)
                                        {
                                            <a class="dropdown-item"
                                               asp-controller="ToDoTasks"
                                               asp-action="CreateBasedOnRecommendation"
                                               asp-route-taskName="@recommendation.TaskName"
                                               asp-route-petId="@pet.PetId"
                                               asp-route-interval="@recommendation.Interval">
                                                @recommendation.TaskName
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
                <tr>
                    <td>
                        <a class="btn btn-outline-danger" asp-controller="Pets" asp-action="Create">Add Pet</a>
                    </td>
                    <td style="padding:8px 0"></td>
                    <td>
                        <a class="btn btn-outline-danger" asp-controller="ToDoTasks" asp-action="Create">Add Custom Task</a>
                    </td>
                </tr>
            </tbody>
        </table>

    </div>
    <div style="overflow-y:auto; border-style: double; border-color:grey; border-width:thick; text-align:center;" class="col-md-5">
        <table>
            <thead>
                <tr>
                    <th>Task Name</th>
                    <th>Pet</th>
                    <th>Task Completed</th>
                </tr>
            </thead>
            @foreach (ToDoTask task in Model.CurrentUsersTasks)
            {
                <tr>
                    <td><a asp-controller="ToDoTasks" asp-action="Details" asp-route-taskId="@task.TaskId">@task.TaskName</a></td>
                    <td>@task.Pet.Name</td>
                    <td><a class="btn btn-primary" asp-controller="ToDoTasks" asp-action="CheckOffTask" asp-route-id="@task.TaskId" asp-route-currentUserId ="@Model.PetOwner.PetOwnerId">Check Off Task</a></td>
                </tr>
            }
        </table>
    </div>
</div>
    <div class="row">        
        <div style="width:100%; padding-top:10px" class="col-md-6">
            <div style="border-style: double; border-color:grey; border-width:thick;">
                <h3>Nearby Pet Stores</h3>
                <div id="petMap" style="height:400px; width:100%"></div>
            </div>            
        </div>
        <div style="width:100%; padding-top:10px" class="col-md-6">
            <div style="border-style: double; border-color:grey; border-width:thick;">
                <h3>Nearby Vets</h3>
                <div id="vetMap" style="height:400px; width:100%"></div>
            </div>
        </div>
    </div>

        <script>
            var map;
            function initMap() {
                map = new google.maps.Map(document.getElementById('petMap'), {
                    center: { lat: @Model.PetOwner.Lat, lng: @Model.PetOwner.Lng},
                    zoom: 11
                });
                @for (int i = 0; i < Model.NearbyPetStores.results.Length; i++) {
                    double storeLat = @Model.NearbyPetStores.results[i].geometry.location.lat;
                    double storeLng = @Model.NearbyPetStores.results[i].geometry.location.lng;
                    <text>
                    var marker = new google.maps.Marker({
                        position: { lat: @storeLat, lng: @storeLng },
                        map: map
                    });
                    </text>
                }
                vetMap();
            }
            function vetMap() {
                map = new google.maps.Map(document.getElementById('vetMap'), {
                    center: { lat: @Model.PetOwner.Lat, lng: @Model.PetOwner.Lng},
                    zoom: 11
                });
                @for (int i = 0; i < Model.NearbyVets.results.Length; i++) {
                    double storeLat = @Model.NearbyVets.results[i].geometry.location.lat;
                    double storeLng = @Model.NearbyVets.results[i].geometry.location.lng;
                    <text>
                    var marker = new google.maps.Marker({
                        position: { lat: @storeLat, lng: @storeLng },
                        map: map
                    });
                    </text>
                }
            }
        </script>

        <script src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.googleAPIKey&callback=initMap" async defer></script>


